Day 1
-----
Version - ES6

HTML
CSS
JavaScript

History
-------
1997 - ES1 - EcmaScript 
1998 - ES2
1999 - ES3 - 
       ES4 - 
2009 - ES5 - Most popular and most widley available
2011 - ES5.1 - 
2015 - ES6 [Significant update]
2016 - ES7
2017 - ES8
2018 - ES9

------------------------------------------------------------------------------
alphabets - character set (a-z, A-Z, special characters)
words - keywords ( these words special meaning )[var, let, const, function etc.]
sentences - statements , console.log("Welocme to JS");
paragraphs - program 
chapters - projects
books

grammar - syntax 

variables
---------
named container - it holds a value

username
age
height
weight
dob
friends


Data Types
----------
primitive
---------
string
number
boolean
null
undefined
symbol

reference
--------
object
array


typeof operator

statements
----------
var x1,x2,x3;
x=5;
y=9;
var z = x + y;

program
comments

Operators
---------
Arthimetic
Assignment
string
Comparison / relational
Logical Operators
Condition Operators
Bitwise
typeof 

Arthimetic Operators:
--------------------
+
-
*
/
%
++
--

Assignment Operators
--------------------
=
+=
-=
*=
/=
%=

string
------
+ ( concatenation )

comparison / relational
-----------------------
==
===
!=
!==
>
<
>=
<=

ternary
-------
?:

Logical Operators
-----------------
&&
||
!

Bitwise
-------
&
|
~
^
<<
>>


&
0101
0001
----
0001

|
0101
0001
----
0101

~
0101 => 1010

^
0101
0001
----
0100

<<
0101 << 1 => 1010

>>

0101 >> 1 => 0010


Template string
---------------

arrays
-----
holds mutiple values
accessed using index which starts at 0
[] or new Array();
[index]
length

push
pop

Day 2
-----
shift
unshift

slice
splice

concat

Objects
-------
2 syntax

1. object literal ( { })
2. using new keyword on constructor function


functions
---------
first class citizen
define function
    named
    anonymous

function expression
invoke function / calling function
optional args / parameters
optional return statement
function as parameter to another function - callback
return function from another function

scope
-----
accessibility / visibity of variables

2 scopes
-------
    1. local scope
    2. global scope 

block scoped - let & const
function scoped - var 


"use strict"

conditional statements
----------------------
if
if else
if else if
switch


loop statements
---------------
for
for in ( ES 5 )
for of ( ES 6 )
while

while (condition)
  statement

do while 
















